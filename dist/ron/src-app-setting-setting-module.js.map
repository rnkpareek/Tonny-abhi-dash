{"version":3,"sources":["webpack:///./src/app/setting/create/create.component.css","webpack:///./src/app/setting/create/create.component.html","webpack:///./src/app/setting/create/create.component.ts","webpack:///./src/app/setting/setting-routing.ts","webpack:///./src/app/setting/setting.component.css","webpack:///./src/app/setting/setting.component.html","webpack:///./src/app/setting/setting.component.ts","webpack:///./src/app/setting/setting.module.ts","webpack:///./src/app/setting/usertable/usertable.component.css","webpack:///./src/app/setting/usertable/usertable.component.html","webpack:///./src/app/setting/usertable/usertable.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mB;;;;;;;;;;;ACAA,87H;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAM1B;AAMxB;IAEE,yBAAqB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAAI,CAAC;IAExC,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGwB,0DAAW;OAFxB,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;AAU5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqDG;;;;;;;;;;;;;AC1EH;AAAA;AAAA;AAAA;AAAA;AAAuD;AACE;AACS;AAC3D,IAAM,aAAa,GAAW;IACnC;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;QAC1B,QAAQ,EAAE;YACT,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,SAAS,EAAE,MAAM,EAAE;YAChE;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,wEAAe;aAC3B;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,iFAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,wEAAe;aAC3B;SAEF;KACF;CACF,CAAC;;;;;;;;;;;;ACzBF,mB;;;;;;;;;;;ACAA,kxB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;AACM;AACA;AACK;AACJ;AACY;AACQ;AACvB;AACM;AAQnD;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAPzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,EAAC,4DAAY,CAAC,QAAQ,CAAC,8DAAa,CAAC,EAAC,0DAAW;gBAC7D,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,mEAAgB,EAAE,wEAAe,EAAE,iFAAkB,CAAC;SACtE,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;AChB1B,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B","file":"src-app-setting-setting-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<!-- h1>Create User</h1>\\n<br>\\n<form [formGroup]=\\\"userform\\\" (ngSubmit)=\\\"onSubmit()\\\"  class=\\\"form-inline\\\">\\n  <div class=\\\"form-group\\\">\\n  <label class=\\\"sr-only\\\" for=\\\"inlineFormInput\\\">First Name</label>\\n    <input type=\\\"text\\\"  formControlName=\\\"firstName\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0\\\" id=\\\"firstname\\\" placeholder=\\\"First Name\\\">\\n  </div>\\n  <label class=\\\"sr-only\\\" for=\\\"inlineFormInputGroup\\\">Last Name</label>\\n  <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastname\\\" placeholder=\\\"Last Name\\\">\\n\\n  </div>\\n  <br>\\n  <br>\\n  <label class=\\\"sr-only\\\" for=\\\"inlineFormInput\\\">Password</label>\\n  <input type=\\\"password\\\" [formGroup]=\\\"userform\\\" formControlName=\\\"password\\\" class=\\\"form-control mb-2 mr-sm-2 mb-sm-0\\\" id=\\\"inlineFormInput\\\" placeholder=\\\"password\\\">\\n\\n  <label class=\\\"sr-only\\\" for=\\\"inlineFormInputGroup\\\">Confirm Password </label>\\n  <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n    <input type=\\\"password\\\"  [formGroup]=\\\"userform\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" id=\\\"ConfirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n  </div>\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"userform.controls.confirmPassword.errors?.MatchPassword\\\">Password not match</div>\\n  <br>\\n  <br>\\n  <label class=\\\"sr-only\\\" for=\\\"inlineFormInputGroup\\\">Username </label>\\n  <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\n    <input type=\\\"text\\\" formControlName=\\\"userName\\\" class=\\\"form-control\\\" id=\\\"inlineFormInputGroup\\\" placeholder=\\\"Username Email\\\">\\n  </div>\\n  <br>\\n  <br>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form> -->\\n<div class=\\\"container\\\">\\n<form>\\n\\t<div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"inputEmail4\\\">First name</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\" placeholder=\\\"Email\\\">\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"inputPassword4\\\">Last Name</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Password\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"inputEmail4\\\">Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\" placeholder=\\\"Email\\\">\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"inputPassword4\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"inputPassword4\\\" placeholder=\\\"Password\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputAddress\\\">Address</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" placeholder=\\\"1234 Main St\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"inputAddress2\\\">Address 2</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAddress2\\\" placeholder=\\\"Apartment, studio, or floor\\\">\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"inputCity\\\">City</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\">\\n    </div>\\n    <div class=\\\"form-group col-md-4\\\">\\n      <label for=\\\"inputState\\\">State</label>\\n      <select id=\\\"inputState\\\" class=\\\"form-control\\\">\\n        <option selected>Choose...</option>\\n        <option>...</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group col-md-2\\\">\\n      <label for=\\\"inputZip\\\">Zip</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"form-check\\\">\\n      <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"gridCheck\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"gridCheck\\\">\\n        Check me out\\n      </label>\\n    </div>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign in</button>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  constructor( private fb:FormBuilder) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n/*import { Component, OnInit } from '@angular/core';\nimport {userForm} from \"./user.model\";\nimport { PasswordValidation } from './validators';\nimport {UserService} from \"../admin.service/create.user\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\n@Component({\n   selector: 'app-create',\n  templateUrl: './create.component.html',\n  styles:[`input.ng-invalid{border-left:5px solid red;}\n\t          input.ng-valid{border-left:5px solid green;}`],\n  providers:[UserService]\n})\nexport class CreateComponent implements OnInit {\n  Schedule_FormData :any ={};\n  userform: FormGroup;\n  constructor( private fb:FormBuilder , private userservice:UserService) {\n    }\n\n  ngOnInit() {\n\n    this.userform= this.fb.group({\n      firstName:['',[Validators.required] ],\n      lastName:[null, Validators.required],\n      password:[null, [Validators.required]],\n      userName:[null, [Validators.required,Validators.email]],\n      confirmPassword:[null,[ Validators.required]],\n\n    },\n      { validator: PasswordValidation.MatchPassword})\n  }\n\n\n\n  onSubmit(){\n    this.Schedule_FormData = this.userform.value;\n    console.log(\"addresss----\",this.userform.value);\n    this.userservice.createUser(this.Schedule_FormData)\n      .subscribe(task => {\n        console.log(task)\n      })\n  }\n\n  equalvalidator (){\n    var password = this.userform.value.password;\n    var conPass = this.userform.value.confirmPassword;\n\n  }\n\n}*/\n","import { Routes } from \"@angular/router\";\nimport { SettingComponent } from './setting.component';\nimport {CreateComponent} from './create/create.component'\nimport {UsertableComponent} from './usertable/usertable.component'\nexport const settingRouter: Routes = [\n  {\n    path: '',\n    component: SettingComponent,\n     children: [\n      { path: '', redirectTo: '.app/setting/user', pathMatch: 'full' },\n      {\n        path: '',\n        component: CreateComponent\n      },\n      {\n        path: 'usertable',\n        component: UsertableComponent\n      },\n      {\n        path: 'create',\n        component: CreateComponent\n      },\n     \n    ]\n  }\n];","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  \\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\">Create user </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"usertable\\\" routerLinkActive=\\\"active\\\">User Table</a>\\n      </li>\\n      </ul>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {SettingComponent} from './setting.component'\nimport {settingRouter} from './setting-routing';\nimport { CreateComponent } from './create/create.component';\nimport { UsertableComponent } from './usertable/usertable.component'\nimport { FormsModule } from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,RouterModule.forChild(settingRouter),FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SettingComponent, CreateComponent, UsertableComponent]\n})\nexport class SettingModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  usertable works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-usertable',\n  templateUrl: './usertable.component.html',\n  styleUrls: ['./usertable.component.css']\n})\nexport class UsertableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}